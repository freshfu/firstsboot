<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.fs.home.favsb.dao.MoviesMapper">
  <resultMap id="BaseResultMap" type="dev.fs.home.favsb.vo.Movies">
    <id column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="director" jdbcType="VARCHAR" property="director" />
    <result column="screen_writer" jdbcType="VARCHAR" property="screenWriter" />
    <result column="writer" jdbcType="VARCHAR" property="writer" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
  </resultMap>
  <sql id="Base_Column_List">
    movie_id, name, type, country, director, screen_writer, writer, release_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from movies
    where movie_id = #{movieId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from movies
    where movie_id = #{movieId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="dev.fs.home.favsb.vo.Movies">
    insert into movies (movie_id, name, type, 
      country, director, screen_writer, 
      writer, release_time)
    values (#{movieId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{director,jdbcType=VARCHAR}, #{screenWriter,jdbcType=VARCHAR}, 
      #{writer,jdbcType=VARCHAR}, #{releaseTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="dev.fs.home.favsb.vo.Movies">
    insert into movies
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="screenWriter != null">
        screen_writer,
      </if>
      <if test="writer != null">
        writer,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="director != null">
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="screenWriter != null">
        #{screenWriter,jdbcType=VARCHAR},
      </if>
      <if test="writer != null">
        #{writer,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="dev.fs.home.favsb.vo.Movies">
    update movies
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="director != null">
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="screenWriter != null">
        screen_writer = #{screenWriter,jdbcType=VARCHAR},
      </if>
      <if test="writer != null">
        writer = #{writer,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dev.fs.home.favsb.vo.Movies">
    update movies
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      director = #{director,jdbcType=VARCHAR},
      screen_writer = #{screenWriter,jdbcType=VARCHAR},
      writer = #{writer,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP}
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
</mapper>